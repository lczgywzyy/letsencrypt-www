#!/bin/bash
set -e
set -u
set -o pipefail
exec 3>&-

BASE_DIR=$(dirname $0)
SCRIPT_PATH="$( cd "${BASE_DIR}" && pwd -P )"
CERT_DIR="./cert"

for secret in "${SCRIPT_PATH}/secrets/*.env"; do source $secret; done

export LETS_ENCRYPT_WWW_LIB_PATH="${SCRIPT_PATH}/lib"
export CERT_DIR="${CERT_DIR}"

source "${LETS_ENCRYPT_WWW_LIB_PATH}/json.sh"
source "${LETS_ENCRYPT_WWW_LIB_PATH}/formatter.sh"
source "${LETS_ENCRYPT_WWW_LIB_PATH}/ssl.sh"
source "${LETS_ENCRYPT_WWW_LIB_PATH}/http.sh"
source "${LETS_ENCRYPT_WWW_LIB_PATH}/utils.sh"
source "${LETS_ENCRYPT_WWW_LIB_PATH}/letsencryptv2.sh"

FQDN=

DNSPod_HOOK="./provider/dnspod.sh"
DNSPod_RECORD_ID=

# Usage: --help (-h)
# Description: Show help text
command_help() {
  printf "Usage: %s [options...] <domain> \n\n" "${0}"
  printf "Default command: --help\n\n"
  echo "Commands:"
  grep -e '^[[:space:]]*# Usage:' -e '^[[:space:]]*# Description:' -e '^command_.*()[[:space:]]*{' "${0}" | while read -r usage; read -r description; read -r command; do
    if [[ ! "${usage}" =~ Usage ]] || [[ ! "${description}" =~ Description ]] || [[ ! "${command}" =~ ^command_ ]]; then
      _exiterr "Error generating help text."
    fi
    printf " %-32s %s\n" "${usage##"# Usage: "}" "${description##"# Description: "}"
  done
}

command_issue_domain() {
  FQDN="${1}"
  local timestamp="$(date +%s)"

  check_msg "Init environment..."
  lev2_init

  check_msg "Apply Let's Encrypt account..."
  lev2_reg_account

  check_msg "Start new order..."
  lev2_new_order "${FQDN}"

  check_msg "Deploy dns-01 challenge to provider DNSPod..."
  lev2_build_authz
  lev2_deploy_challenge "${DNSPod_HOOK}"
  lev2_check_challenge_status "${DNSPod_HOOK}"
  lev2_valid_challenge
  lev2_clean_challenge "${DNSPod_HOOK}"

  check_msg "Sign domain ${FQDN}..."
  lev2_sign_domain "${FQDN}"

  check_msg "Produce cert..."
  lev2_produce_cert
  lev2_rename_cert "${FQDN}"

  check_msg "Done, www domain "${FQDN}" cert at: "
  echo "================"
  echo "$( cd "${BASE_DIR}/${CERT_DIR}" && pwd -P )"
  echo "================"
}

main() {
  [[ -z "${@}" ]] && eval set -- "--help"

  while (( ${#} )); do
    case "${1}" in
      --help|-h)
        command_help
        exit 0
        ;;

      *)
        command_issue_domain "${1}"
        ;;
    esac

    shift 1
  done
}

main "${@-}"